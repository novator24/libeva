<refentry id="eva-evamodule">
<refmeta>
<refentrytitle role="top_of_page" id="eva-evamodule.top_of_page">evamodule</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>EVA Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>evamodule</refname>
<refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv id="eva-evamodule.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>
                    <link linkend="GskCompileContext">GskCompileContext</link>;
                    <link linkend="GskModule">GskModule</link>;
<link linkend="GskCompileContext">GskCompileContext</link> * <link linkend="eva-compile-context-new">eva_compile_context_new</link>             (void);
<link linkend="void">void</link>                <link linkend="eva-compile-context-add-cflags">eva_compile_context_add_cflags</link>      (<link linkend="GskCompileContext">GskCompileContext</link> *context,
                                                         const <link linkend="char">char</link> *flags);
<link linkend="void">void</link>                <link linkend="eva-compile-context-add-ldflags">eva_compile_context_add_ldflags</link>     (<link linkend="GskCompileContext">GskCompileContext</link> *context,
                                                         const <link linkend="char">char</link> *flags);
<link linkend="void">void</link>                <link linkend="eva-compile-context-add-pkg">eva_compile_context_add_pkg</link>         (<link linkend="GskCompileContext">GskCompileContext</link> *context,
                                                         const <link linkend="char">char</link> *pkg);
<link linkend="void">void</link>                <link linkend="eva-compile-context-set-tmp-dir">eva_compile_context_set_tmp_dir</link>     (<link linkend="GskCompileContext">GskCompileContext</link> *context,
                                                         const <link linkend="char">char</link> *tmp_dir);
<link linkend="void">void</link>                <link linkend="eva-compile-context-set-gdb">eva_compile_context_set_gdb</link>         (<link linkend="GskCompileContext">GskCompileContext</link> *context,
                                                         <link linkend="gboolean">gboolean</link> support);
<link linkend="void">void</link>                <link linkend="eva-compile-context-set-verbose">eva_compile_context_set_verbose</link>     (<link linkend="GskCompileContext">GskCompileContext</link> *context,
                                                         <link linkend="gboolean">gboolean</link> support);
<link linkend="void">void</link>                <link linkend="eva-compile-context-free">eva_compile_context_free</link>            (<link linkend="GskCompileContext">GskCompileContext</link> *context);
<link linkend="GskModule">GskModule</link> *         <link linkend="eva-module-compile">eva_module_compile</link>                  (<link linkend="GskCompileContext">GskCompileContext</link> *context,
                                                         <link linkend="guint">guint</link> n_sources,
                                                         <link linkend="char">char</link> **sources,
                                                         <link linkend="GModuleFlags">GModuleFlags</link> flags,
                                                         <link linkend="gboolean">gboolean</link> delete_sources,
                                                         <link linkend="char">char</link> **program_output,
                                                         <link linkend="GError">GError</link> **error);
<link linkend="GskModule">GskModule</link> *         <link linkend="eva-module-open">eva_module_open</link>                     (const <link linkend="char">char</link> *filename,
                                                         <link linkend="GModuleFlags">GModuleFlags</link> flags,
                                                         <link linkend="GError">GError</link> **error);
<link linkend="GskModule">GskModule</link> *         <link linkend="eva-module-ref">eva_module_ref</link>                      (<link linkend="GskModule">GskModule</link> *module);
<link linkend="void">void</link>                <link linkend="eva-module-unref">eva_module_unref</link>                    (<link linkend="GskModule">GskModule</link> *module);
<link linkend="gpointer">gpointer</link>            <link linkend="eva-module-lookup">eva_module_lookup</link>                   (<link linkend="GskModule">GskModule</link> *module,
                                                         const <link linkend="char">char</link> *symbol_name);
</synopsis>
</refsynopsisdiv>









<refsect1 id="eva-evamodule.description" role="desc">
<title role="desc.title">Description</title>
<para>
</para>
</refsect1>

<refsect1 id="eva-evamodule.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="GskCompileContext" role="struct">
<title>GskCompileContext</title>
<indexterm zone="GskCompileContext"><primary sortas="GskCompileContext">GskCompileContext</primary></indexterm><programlisting>typedef struct _GskCompileContext GskCompileContext;</programlisting>
<para>
</para></refsect2>
<refsect2 id="GskModule" role="struct">
<title>GskModule</title>
<indexterm zone="GskModule"><primary sortas="GskModule">GskModule</primary></indexterm><programlisting>typedef struct _GskModule GskModule;</programlisting>
<para>
</para></refsect2>
<refsect2 id="eva-compile-context-new" role="function">
<title>eva_compile_context_new ()</title>
<indexterm zone="eva-compile-context-new"><primary sortas="eva_compile_context_new">eva_compile_context_new</primary></indexterm><programlisting><link linkend="GskCompileContext">GskCompileContext</link> * eva_compile_context_new             (void);</programlisting>
<para>
Create a new compilation context.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the new compilation-context.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="eva-compile-context-add-cflags" role="function">
<title>eva_compile_context_add_cflags ()</title>
<indexterm zone="eva-compile-context-add-cflags"><primary sortas="eva_compile_context_add_cflags">eva_compile_context_add_cflags</primary></indexterm><programlisting><link linkend="void">void</link>                eva_compile_context_add_cflags      (<link linkend="GskCompileContext">GskCompileContext</link> *context,
                                                         const <link linkend="char">char</link> *flags);</programlisting>
<para>
Add compiler flags that you want used in
this compilation-context.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> the compilation context.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>flags</parameter>&#160;:</term>
<listitem><simpara> a space-separated list of compiler flags.
This will be passed through the shell.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="eva-compile-context-add-ldflags" role="function">
<title>eva_compile_context_add_ldflags ()</title>
<indexterm zone="eva-compile-context-add-ldflags"><primary sortas="eva_compile_context_add_ldflags">eva_compile_context_add_ldflags</primary></indexterm><programlisting><link linkend="void">void</link>                eva_compile_context_add_ldflags     (<link linkend="GskCompileContext">GskCompileContext</link> *context,
                                                         const <link linkend="char">char</link> *flags);</programlisting>
<para>
Add linker flags that you want used in
this compilation-context.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> the compilation context.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>flags</parameter>&#160;:</term>
<listitem><simpara> a space-separated list of linker flags.
This will be passed through the shell.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="eva-compile-context-add-pkg" role="function">
<title>eva_compile_context_add_pkg ()</title>
<indexterm zone="eva-compile-context-add-pkg"><primary sortas="eva_compile_context_add_pkg">eva_compile_context_add_pkg</primary></indexterm><programlisting><link linkend="void">void</link>                eva_compile_context_add_pkg         (<link linkend="GskCompileContext">GskCompileContext</link> *context,
                                                         const <link linkend="char">char</link> *pkg);</programlisting>
<para>
Add a package-dependency for this compilation context.
</para>
<para>
TODO error-handling.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> the compilation context.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pkg</parameter>&#160;:</term>
<listitem><simpara> the name of a library as known by pkgconfig(1).
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="eva-compile-context-set-tmp-dir" role="function">
<title>eva_compile_context_set_tmp_dir ()</title>
<indexterm zone="eva-compile-context-set-tmp-dir"><primary sortas="eva_compile_context_set_tmp_dir">eva_compile_context_set_tmp_dir</primary></indexterm><programlisting><link linkend="void">void</link>                eva_compile_context_set_tmp_dir     (<link linkend="GskCompileContext">GskCompileContext</link> *context,
                                                         const <link linkend="char">char</link> *tmp_dir);</programlisting>
<para>
Set the directory to use for temporary files.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> the compilation context.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tmp_dir</parameter>&#160;:</term>
<listitem><simpara> the temporary directory to use.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="eva-compile-context-set-gdb" role="function">
<title>eva_compile_context_set_gdb ()</title>
<indexterm zone="eva-compile-context-set-gdb"><primary sortas="eva_compile_context_set_gdb">eva_compile_context_set_gdb</primary></indexterm><programlisting><link linkend="void">void</link>                eva_compile_context_set_gdb         (<link linkend="GskCompileContext">GskCompileContext</link> *context,
                                                         <link linkend="gboolean">gboolean</link> support);</programlisting>
<para>
Set whether gdb will be supported on shared-libraries
created with this context.
The default is FALSE.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> the compilation context.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>support</parameter>&#160;:</term>
<listitem><simpara> whether to support gdb by not immediately deleting temporary files.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="eva-compile-context-set-verbose" role="function">
<title>eva_compile_context_set_verbose ()</title>
<indexterm zone="eva-compile-context-set-verbose"><primary sortas="eva_compile_context_set_verbose">eva_compile_context_set_verbose</primary></indexterm><programlisting><link linkend="void">void</link>                eva_compile_context_set_verbose     (<link linkend="GskCompileContext">GskCompileContext</link> *context,
                                                         <link linkend="gboolean">gboolean</link> support);</programlisting>
<para>
Set whether to be verbose.
When the context is verbose, compilation and link commands
are printed out to stderr, with "compiling: " and "linking: " prefixes.
</para>
<para>
The default is FALSE.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> the compilation context.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>support</parameter>&#160;:</term>
<listitem><simpara> whether to support be verbose.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="eva-compile-context-free" role="function">
<title>eva_compile_context_free ()</title>
<indexterm zone="eva-compile-context-free"><primary sortas="eva_compile_context_free">eva_compile_context_free</primary></indexterm><programlisting><link linkend="void">void</link>                eva_compile_context_free            (<link linkend="GskCompileContext">GskCompileContext</link> *context);</programlisting>
<para>
Free memory used by the compilation context.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> the compilation context to free.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="eva-module-compile" role="function">
<title>eva_module_compile ()</title>
<indexterm zone="eva-module-compile"><primary sortas="eva_module_compile">eva_module_compile</primary></indexterm><programlisting><link linkend="GskModule">GskModule</link> *         eva_module_compile                  (<link linkend="GskCompileContext">GskCompileContext</link> *context,
                                                         <link linkend="guint">guint</link> n_sources,
                                                         <link linkend="char">char</link> **sources,
                                                         <link linkend="GModuleFlags">GModuleFlags</link> flags,
                                                         <link linkend="gboolean">gboolean</link> delete_sources,
                                                         <link linkend="char">char</link> **program_output,
                                                         <link linkend="GError">GError</link> **error);</programlisting>
<para>
Compile a collection of sources into a module.
This will invoke the compiler n_sources times,
and the linker once.
</para>
<para>
If <parameter>delete_sources</parameter> is set, then the source files
will be deleted, but when depends on whether gdb support is enabled.
If it is enabled, then they are deleted only once the module is closed.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> the compilation context.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n_sources</parameter>&#160;:</term>
<listitem><simpara> the number of source files to compile into the module.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sources</parameter>&#160;:</term>
<listitem><simpara> the source files.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>flags</parameter>&#160;:</term>
<listitem><simpara> ...
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>delete_sources</parameter>&#160;:</term>
<listitem><simpara> whether to delete the source files
as possible (depending on whether gdb support is enabled)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>program_output</parameter>&#160;:</term>
<listitem><simpara> the program's output.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara> where to put an error if something goes wrong.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="eva-module-open" role="function">
<title>eva_module_open ()</title>
<indexterm zone="eva-module-open"><primary sortas="eva_module_open">eva_module_open</primary></indexterm><programlisting><link linkend="GskModule">GskModule</link> *         eva_module_open                     (const <link linkend="char">char</link> *filename,
                                                         <link linkend="GModuleFlags">GModuleFlags</link> flags,
                                                         <link linkend="GError">GError</link> **error);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>filename</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>flags</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="eva-module-ref" role="function">
<title>eva_module_ref ()</title>
<indexterm zone="eva-module-ref"><primary sortas="eva_module_ref">eva_module_ref</primary></indexterm><programlisting><link linkend="GskModule">GskModule</link> *         eva_module_ref                      (<link linkend="GskModule">GskModule</link> *module);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>module</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="eva-module-unref" role="function">
<title>eva_module_unref ()</title>
<indexterm zone="eva-module-unref"><primary sortas="eva_module_unref">eva_module_unref</primary></indexterm><programlisting><link linkend="void">void</link>                eva_module_unref                    (<link linkend="GskModule">GskModule</link> *module);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>module</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="eva-module-lookup" role="function">
<title>eva_module_lookup ()</title>
<indexterm zone="eva-module-lookup"><primary sortas="eva_module_lookup">eva_module_lookup</primary></indexterm><programlisting><link linkend="gpointer">gpointer</link>            eva_module_lookup                   (<link linkend="GskModule">GskModule</link> *module,
                                                         const <link linkend="char">char</link> *symbol_name);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>module</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>symbol_name</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
