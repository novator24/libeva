<refentry id="eva-evadebug">
<refmeta>
<refentrytitle role="top_of_page" id="eva-evadebug.top_of_page">Runtime Toggled Debug Logging</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>EVA Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>Runtime Toggled Debug Logging</refname>
<refpurpose>methods to quickly turn logging on and off for portions of EVA.</refpurpose>
</refnamediv>

<refsynopsisdiv id="eva-evadebug.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>
enum                <link linkend="GskDebugFlags">GskDebugFlags</link>;
extern              const gboolean <link linkend="eva-debugging-on">eva_debugging_on</link>;
<link linkend="void">void</link>                <link linkend="eva-debug-set-flags">eva_debug_set_flags</link>                 (<link linkend="GskDebugFlags">GskDebugFlags</link> flags);
<link linkend="void">void</link>                <link linkend="eva-debug-add-flags">eva_debug_add_flags</link>                 (<link linkend="GskDebugFlags">GskDebugFlags</link> flags);
extern              GskDebugFlags <link linkend="eva-debug-flags">eva_debug_flags</link>;
</synopsis>
</refsynopsisdiv>









<refsect1 id="eva-evadebug.description" role="desc">
<title role="desc.title">Description</title>
<para>
These functions allow you to programmitcally
set the EVA debugging flags.  Usually, one
sets these at runtime instead, by using the --eva-debug=FLAGS
command-line argument to your program.
</para>
<para>
In any event, EVA's debugging facilities are only available if
EVA itself was configured with eva-debug support,
by specifying <arg>--enable-eva-debug</arg> to
EVA's configure script.
</para>
</refsect1>

<refsect1 id="eva-evadebug.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="GskDebugFlags" role="enum">
<title>enum GskDebugFlags</title>
<indexterm zone="GskDebugFlags"><primary sortas="GskDebugFlags">GskDebugFlags</primary></indexterm><programlisting>typedef enum
{
  EVA_DEBUG_IO     		= (1&lt;&lt;0),
  EVA_DEBUG_STREAM 		= (1&lt;&lt;1),
  EVA_DEBUG_STREAM_LISTENER 	= (1&lt;&lt;2),
  EVA_DEBUG_STREAM_DATA         = (1&lt;&lt;3),
  EVA_DEBUG_LIFETIME		= (1&lt;&lt;4),
  EVA_DEBUG_MAIN_LOOP		= (1&lt;&lt;5),
  EVA_DEBUG_DNS			= (1&lt;&lt;6),
  EVA_DEBUG_HOOK		= (1&lt;&lt;7),
  EVA_DEBUG_SSL     		= (1&lt;&lt;8),
  EVA_DEBUG_HTTP     		= (1&lt;&lt;9),
  EVA_DEBUG_FTP     		= (1&lt;&lt;10),
  EVA_DEBUG_REQUEST 		= (1&lt;&lt;11),
  EVA_DEBUG_FD                  = (1&lt;&lt;12),

  EVA_DEBUG_ALL			= 0xffffffff
} GskDebugFlags;
</programlisting>
<para>
Flags which may be turned on to print debugging messages about
them.
</para><variablelist role="enum">
<varlistentry id="EVA-DEBUG-IO--CAPS" role="constant">
<term><literal>EVA_DEBUG_IO</literal></term>
<listitem><simpara>
I/O hook debugging.
</simpara></listitem>
</varlistentry>
<varlistentry id="EVA-DEBUG-STREAM--CAPS" role="constant">
<term><literal>EVA_DEBUG_STREAM</literal></term>
<listitem><simpara>
Read/write debugging.
</simpara></listitem>
</varlistentry>
<varlistentry id="EVA-DEBUG-STREAM-LISTENER--CAPS" role="constant">
<term><literal>EVA_DEBUG_STREAM_LISTENER</literal></term>
<listitem><simpara>
Server listener debugging.
</simpara></listitem>
</varlistentry>
<varlistentry id="EVA-DEBUG-STREAM-DATA--CAPS" role="constant">
<term><literal>EVA_DEBUG_STREAM_DATA</literal></term>
<listitem><simpara>
Stream debugging by dumping all the data exchanged with
the stream.
</simpara></listitem>
</varlistentry>
<varlistentry id="EVA-DEBUG-LIFETIME--CAPS" role="constant">
<term><literal>EVA_DEBUG_LIFETIME</literal></term>
<listitem><simpara>
Debug object lifetime issues.
</simpara></listitem>
</varlistentry>
<varlistentry id="EVA-DEBUG-MAIN-LOOP--CAPS" role="constant">
<term><literal>EVA_DEBUG_MAIN_LOOP</literal></term>
<listitem><simpara>
Debug main-loop behavior.
</simpara></listitem>
</varlistentry>
<varlistentry id="EVA-DEBUG-DNS--CAPS" role="constant">
<term><literal>EVA_DEBUG_DNS</literal></term>
<listitem><simpara>
Debug name lookup behavior.
</simpara></listitem>
</varlistentry>
<varlistentry id="EVA-DEBUG-HOOK--CAPS" role="constant">
<term><literal>EVA_DEBUG_HOOK</literal></term>
<listitem><simpara>
Debug hooks.
</simpara></listitem>
</varlistentry>
<varlistentry id="EVA-DEBUG-SSL--CAPS" role="constant">
<term><literal>EVA_DEBUG_SSL</literal></term>
<listitem><simpara>
Debug SSL (a secure transport layer, used by https).
</simpara></listitem>
</varlistentry>
<varlistentry id="EVA-DEBUG-HTTP--CAPS" role="constant">
<term><literal>EVA_DEBUG_HTTP</literal></term>
<listitem><simpara>
Debug HTTP, the protocol used for web pages.
</simpara></listitem>
</varlistentry>
<varlistentry id="EVA-DEBUG-FTP--CAPS" role="constant">
<term><literal>EVA_DEBUG_FTP</literal></term>
<listitem><simpara>
</simpara></listitem>
</varlistentry>
<varlistentry id="EVA-DEBUG-REQUEST--CAPS" role="constant">
<term><literal>EVA_DEBUG_REQUEST</literal></term>
<listitem><simpara>
</simpara></listitem>
</varlistentry>
<varlistentry id="EVA-DEBUG-FD--CAPS" role="constant">
<term><literal>EVA_DEBUG_FD</literal></term>
<listitem><simpara>
Debug file-descriptor usage.
</simpara></listitem>
</varlistentry>
<varlistentry id="EVA-DEBUG-ALL--CAPS" role="constant">
<term><literal>EVA_DEBUG_ALL</literal></term>
<listitem><simpara>
All debug flags.
</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2 id="eva-debugging-on" role="variable">
<title>eva_debugging_on</title>
<indexterm zone="eva-debugging-on"><primary sortas="eva_debugging_on">eva_debugging_on</primary></indexterm><programlisting>extern const gboolean eva_debugging_on;
</programlisting>
<para>
Whether debugging is on.
</para>
<para>
This corresponds with whether EVA's <program>configure</program>
script was run with the <arg>--enable-eva-debug</arg> option.
</para></refsect2>
<refsect2 id="eva-debug-set-flags" role="function">
<title>eva_debug_set_flags ()</title>
<indexterm zone="eva-debug-set-flags"><primary sortas="eva_debug_set_flags">eva_debug_set_flags</primary></indexterm><programlisting><link linkend="void">void</link>                eva_debug_set_flags                 (<link linkend="GskDebugFlags">GskDebugFlags</link> flags);</programlisting>
<para>
Set which types of debug logs to emit.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>flags</parameter>&#160;:</term>
<listitem><simpara> debug bits to start logging.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="eva-debug-add-flags" role="function">
<title>eva_debug_add_flags ()</title>
<indexterm zone="eva-debug-add-flags"><primary sortas="eva_debug_add_flags">eva_debug_add_flags</primary></indexterm><programlisting><link linkend="void">void</link>                eva_debug_add_flags                 (<link linkend="GskDebugFlags">GskDebugFlags</link> flags);</programlisting>
<para>
Add new types of debug logs to emit.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>flags</parameter>&#160;:</term>
<listitem><simpara> debug bits to start logging.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="eva-debug-flags" role="variable">
<title>eva_debug_flags</title>
<indexterm zone="eva-debug-flags"><primary sortas="eva_debug_flags">eva_debug_flags</primary></indexterm><programlisting>extern GskDebugFlags eva_debug_flags;
</programlisting>
<para>
</para></refsect2>

</refsect1>




</refentry>
