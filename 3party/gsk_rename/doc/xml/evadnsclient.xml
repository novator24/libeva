<refentry id="eva-evadnsclient">
<refmeta>
<refentrytitle role="top_of_page" id="eva-evadnsclient.top_of_page">evadnsclient</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>EVA Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>evadnsclient</refname>
<refpurpose>This is a DNS client.</refpurpose>
</refnamediv>

<refsynopsisdiv id="eva-evadnsclient.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>
<anchor id="EvaDnsClient"/>
<synopsis>
                    <link linkend="EvaDnsClient-struct">EvaDnsClient</link>;
                    <link linkend="EvaDnsClientClass">EvaDnsClientClass</link>;
enum                <link linkend="EvaDnsClientFlags">EvaDnsClientFlags</link>;
<link linkend="EvaDnsClient">EvaDnsClient</link> *      <link linkend="eva-dns-client-new">eva_dns_client_new</link>                  (<link linkend="EvaPacketQueue">EvaPacketQueue</link> *packet_queue,
                                                         <link linkend="EvaDnsRRCache">EvaDnsRRCache</link> *rr_cache,
                                                         <link linkend="EvaDnsClientFlags">EvaDnsClientFlags</link> flags);
<link linkend="void">void</link>                <link linkend="eva-dns-client-add-searchpath">eva_dns_client_add_searchpath</link>       (<link linkend="EvaDnsClient">EvaDnsClient</link> *client,
                                                         const <link linkend="char">char</link> *searchpath);
<link linkend="void">void</link>                <link linkend="eva-dns-client-add-ns">eva_dns_client_add_ns</link>               (<link linkend="EvaDnsClient">EvaDnsClient</link> *client,
                                                         <link linkend="EvaSocketAddressIpv4">EvaSocketAddressIpv4</link> *address);
<link linkend="void">void</link>                <link linkend="eva-dns-client-set-cache">eva_dns_client_set_cache</link>            (<link linkend="EvaDnsClient">EvaDnsClient</link> *client,
                                                         <link linkend="EvaDnsRRCache">EvaDnsRRCache</link> *rr_cache);
<link linkend="void">void</link>                <link linkend="eva-dns-client-set-flags">eva_dns_client_set_flags</link>            (<link linkend="EvaDnsClient">EvaDnsClient</link> *client,
                                                         <link linkend="EvaDnsClientFlags">EvaDnsClientFlags</link> flags);
<link linkend="EvaDnsClientFlags">EvaDnsClientFlags</link>   <link linkend="eva-dns-client-get-flags">eva_dns_client_get_flags</link>            (<link linkend="EvaDnsClient">EvaDnsClient</link> *client);
<link linkend="gboolean">gboolean</link>            <link linkend="eva-dns-client-parse-system-files">eva_dns_client_parse_system_files</link>   (<link linkend="EvaDnsClient">EvaDnsClient</link> *client);
</synopsis>
</refsynopsisdiv>

<refsect1 id="eva-evadnsclient.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>
  <link linkend="GObject">GObject</link>
   +----EvaDnsClient
</synopsis>
</refsect1>



<refsect1 id="eva-evadnsclient.implemented-interfaces" role="impl_interfaces">
<title role="impl_interfaces.title">Implemented Interfaces</title>
<para>
EvaDnsClient implements
 <link linkend="EvaNameResolver">EvaNameResolver</link> and  <link linkend="EvaDnsResolver">EvaDnsResolver</link>.</para>
</refsect1>





<refsect1 id="eva-evadnsclient.description" role="desc">
<title role="desc.title">Description</title>
<para>
This is a flexible DNS client.  It has (1) a transport for packets and
(2) a cache of resource records.
</para>
<para>
This code is almost always used indirectly, from <link linkend="eva-name-resolve"><function>eva_name_resolve()</function></link>,
since the default name resolver uses DNS.
</para>
</refsect1>

<refsect1 id="eva-evadnsclient.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="EvaDnsClient-struct" role="struct">
<title>EvaDnsClient</title>
<indexterm zone="EvaDnsClient-struct"><primary sortas="EvaDnsClient">EvaDnsClient</primary></indexterm><programlisting>typedef struct _EvaDnsClient EvaDnsClient;</programlisting>
<para>
An instance of the DNS client.
</para></refsect2>
<refsect2 id="EvaDnsClientClass" role="struct">
<title>EvaDnsClientClass</title>
<indexterm zone="EvaDnsClientClass"><primary sortas="EvaDnsClientClass">EvaDnsClientClass</primary></indexterm><programlisting>typedef struct _EvaDnsClientClass EvaDnsClientClass;</programlisting>
<para>
The class of the DNS client.
</para></refsect2>
<refsect2 id="EvaDnsClientFlags" role="enum">
<title>enum EvaDnsClientFlags</title>
<indexterm zone="EvaDnsClientFlags"><primary sortas="EvaDnsClientFlags">EvaDnsClientFlags</primary></indexterm><programlisting>typedef enum
{
  EVA_DNS_CLIENT_STUB_RESOLVER = (1&lt;&lt;0)
} EvaDnsClientFlags;
</programlisting>
<para>
Flags which affect how the DNS client operates.
</para><variablelist role="enum">
<varlistentry id="EVA-DNS-CLIENT-STUB-RESOLVER--CAPS" role="constant">
<term><literal>EVA_DNS_CLIENT_STUB_RESOLVER</literal></term>
<listitem><simpara>
Whether this DNS client is a stub resolver.
A stub resolver relies on its name-server to do all
recursion and caching for it.
</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2 id="eva-dns-client-new" role="function">
<title>eva_dns_client_new ()</title>
<indexterm zone="eva-dns-client-new"><primary sortas="eva_dns_client_new">eva_dns_client_new</primary></indexterm><programlisting><link linkend="EvaDnsClient">EvaDnsClient</link> *      eva_dns_client_new                  (<link linkend="EvaPacketQueue">EvaPacketQueue</link> *packet_queue,
                                                         <link linkend="EvaDnsRRCache">EvaDnsRRCache</link> *rr_cache,
                                                         <link linkend="EvaDnsClientFlags">EvaDnsClientFlags</link> flags);</programlisting>
<para>
Create a new DNS client.
This implements the <link linkend="EvaDnsResolver"><type>EvaDnsResolver</type></link> interface.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>packet_queue</parameter>&#160;:</term>
<listitem><simpara> underlying transport layer to use.
The client will keep a reference to this packet-queue.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>rr_cache</parameter>&#160;:</term>
<listitem><simpara> cache of resource-records.
The client will keep a reference to this cache.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>flags</parameter>&#160;:</term>
<listitem><simpara> whether you want this client to be a recursive
or stub resolver.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the newly allocated DNS client.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="eva-dns-client-add-searchpath" role="function">
<title>eva_dns_client_add_searchpath ()</title>
<indexterm zone="eva-dns-client-add-searchpath"><primary sortas="eva_dns_client_add_searchpath">eva_dns_client_add_searchpath</primary></indexterm><programlisting><link linkend="void">void</link>                eva_dns_client_add_searchpath       (<link linkend="EvaDnsClient">EvaDnsClient</link> *client,
                                                         const <link linkend="char">char</link> *searchpath);</programlisting>
<para>
Add a new implicit domain to the list the client keeps.
</para>
<para>
A searchpath entry is simply a domain to try
post-fixing to any request.  For example,
if you have "sourceforce.net" in your searchpath,
then looking "cvs.eva" should resolve "cvs.eva.sourceforge.net".
</para>
<para>
Searchpath entries take priority, EXCEPT
if the requested domain name ends in ".".
If you have "sourceforce.net" in your searchpath,
then looking "cvs.com" should resolve "cvs.com.sourceforge.net"
then "cvs.com" if the former does not exist.
However, looking up "cvs.com." will ONLY search the global namespace.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>client</parameter>&#160;:</term>
<listitem><simpara> the client to affect.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>searchpath</parameter>&#160;:</term>
<listitem><simpara> the new path to search.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="eva-dns-client-add-ns" role="function">
<title>eva_dns_client_add_ns ()</title>
<indexterm zone="eva-dns-client-add-ns"><primary sortas="eva_dns_client_add_ns">eva_dns_client_add_ns</primary></indexterm><programlisting><link linkend="void">void</link>                eva_dns_client_add_ns               (<link linkend="EvaDnsClient">EvaDnsClient</link> *client,
                                                         <link linkend="EvaSocketAddressIpv4">EvaSocketAddressIpv4</link> *address);</programlisting>
<para>
Add a new nameserver to query.
All nameservers will be queried simultaneously.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>client</parameter>&#160;:</term>
<listitem><simpara> the client to affect.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>address</parameter>&#160;:</term>
<listitem><simpara> the numeric address of the nameserver.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="eva-dns-client-set-cache" role="function">
<title>eva_dns_client_set_cache ()</title>
<indexterm zone="eva-dns-client-set-cache"><primary sortas="eva_dns_client_set_cache">eva_dns_client_set_cache</primary></indexterm><programlisting><link linkend="void">void</link>                eva_dns_client_set_cache            (<link linkend="EvaDnsClient">EvaDnsClient</link> *client,
                                                         <link linkend="EvaDnsRRCache">EvaDnsRRCache</link> *rr_cache);</programlisting>
<para>
Switch the client to use a new resource-record cache.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>client</parameter>&#160;:</term>
<listitem><simpara> the client to affect.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>rr_cache</parameter>&#160;:</term>
<listitem><simpara> the new resource-record cache to use.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="eva-dns-client-set-flags" role="function">
<title>eva_dns_client_set_flags ()</title>
<indexterm zone="eva-dns-client-set-flags"><primary sortas="eva_dns_client_set_flags">eva_dns_client_set_flags</primary></indexterm><programlisting><link linkend="void">void</link>                eva_dns_client_set_flags            (<link linkend="EvaDnsClient">EvaDnsClient</link> *client,
                                                         <link linkend="EvaDnsClientFlags">EvaDnsClientFlags</link> flags);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>client</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>flags</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="eva-dns-client-get-flags" role="function">
<title>eva_dns_client_get_flags ()</title>
<indexterm zone="eva-dns-client-get-flags"><primary sortas="eva_dns_client_get_flags">eva_dns_client_get_flags</primary></indexterm><programlisting><link linkend="EvaDnsClientFlags">EvaDnsClientFlags</link>   eva_dns_client_get_flags            (<link linkend="EvaDnsClient">EvaDnsClient</link> *client);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>client</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="eva-dns-client-parse-system-files" role="function">
<title>eva_dns_client_parse_system_files ()</title>
<indexterm zone="eva-dns-client-parse-system-files"><primary sortas="eva_dns_client_parse_system_files">eva_dns_client_parse_system_files</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            eva_dns_client_parse_system_files   (<link linkend="EvaDnsClient">EvaDnsClient</link> *client);</programlisting>
<para>
Parse system DNS configuration.
</para>
<para>
Currently, this parses /etc/hosts and /etc/resolv.conf .</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>client</parameter>&#160;:</term>
<listitem><simpara> the client which should add the system configuration information.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> whether the files were parsed successfully.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
